package iot

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
	"strconv"
)


// BatchCheckDeviceNames invokes the iot.BatchCheckDeviceNames API synchronously
// api document: https://help.aliyun.com/document_detail/69482.html
func (client *Client) BatchCheckDeviceNames(request *BatchCheckDeviceNamesRequest) (response *BatchCheckDeviceNamesResponse, err error) {
	response = CreateBatchCheckDeviceNamesResponse()
	err = client.DoAction(request, response)
	return
}

// BatchCheckDeviceNamesRequest is the request struct for api BatchCheckDeviceNames
type BatchCheckDeviceNamesRequest struct {
	*requests.RpcRequest
	ProductKey string `position:"Query" name:"ProductKey"`
}

// SetDeviceName is the request struct for set device name
func (request *BatchCheckDeviceNamesRequest) SetDeviceNames(deviceNames []string) {
	if deviceNames == nil || len(deviceNames) == 0 {
		return
	}
	paramsMap := request.GetQueryParams()
	for i := 1; i <= len(deviceNames); i++ {
		paramsMap["DeviceName."+strconv.Itoa(i)] = deviceNames[i-1]
	}
}


// BatchCheckDeviceNamesResponse is the response struct for api BatchCheckDeviceNames
type BatchCheckDeviceNamesResponse struct {
	*responses.BaseResponse
	RequestId string `json:"RequestId" xml:"RequestId"`
}

// CreateBatchCheckDeviceNamesResponse creates a response to parse from BatchCheckDeviceNames response
func CreateBatchCheckDeviceNamesResponse() (response *BatchCheckDeviceNamesResponse) {
	response = &BatchCheckDeviceNamesResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}

// CreateBatchCheckDeviceNamesRequest creates a request to invoke BatchCheckDeviceNames request
func CreateBatchCheckDeviceNamesRequest() (request *BatchCheckDeviceNamesRequest) {
	request = &BatchCheckDeviceNamesRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Iot", "2018-01-20", "BatchCheckDeviceNames", "iot", "openAPI")
	return
}
